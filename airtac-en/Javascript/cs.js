function SetPR_PT_3()
{
	var l1=0,l2=0;
	var l3=0,l4=0,l6=0; //m1用
	var l7=0,l8=0,l5=0; //m2用
	l1=Bs1+Bs2+Bs3;
	l2=Rs;
	if(l1==0){l1=HK_L/2;}
	if(l2==0){l2=HK_d/2;}
	
	l4=Br+Gr1;      //l4=Bt-Gt1;
	l3=0.5*l1-Ga1;  //l3=Ga1-0.5*l1;
	l6=Br+Gr1;
	
	l8=Br+Gr2;       //l8=Bt-Gt2;
	l7=0.5*l1-Ga2;  //l7=Ga2-0.5*l1;
	l5=Br+Gr2;
	
	//等速时
	PR_0[1]=m1*g*l4/(2*l2)+m2*g*l8/(2*l2);
	PR_0[2]=m1*g*l4/(2*l2)+m2*g*l8/(2*l2);
	PR_0[3]=m1*g*l4/(2*l2)+m2*g*l8/(2*l2);
	PR_0[4]=m1*g*l4/(2*l2)+m2*g*l8/(2*l2);
	PT_0[1]=m1*g/HKS+m1*g*l3/(2*l1)+m2*g/HKS+m2*g*l7/(2*l1);
	PT_0[2]=m1*g/HKS-m1*g*l3/(2*l1)+m2*g/HKS-m2*g*l7/(2*l1);
	PT_0[3]=m1*g/HKS-m1*g*l3/(2*l1)+m2*g/HKS-m2*g*l7/(2*l1);
	PT_0[4]=m1*g/HKS+m1*g*l3/(2*l1)+m2*g/HKS+m2*g*l7/(2*l1);
	
	//左加速
	PR_1[1]=PR_0[1]-m1*a1*l6/(2*l1)-m2*a1*l5/(2*l1);
	PR_1[2]=PR_0[2]+m1*a1*l6/(2*l1)+m2*a1*l5/(2*l1);
	PR_1[3]=PR_0[3]+m1*a1*l6/(2*l1)+m2*a1*l5/(2*l1);
	PR_1[4]=PR_0[4]-m1*a1*l6/(2*l1)-m2*a1*l5/(2*l1);
	PT_1[1]=PT_1[1]-m1*a1*l4/(2*l1)-m2*a1*l8/(2*l1);     
	PT_1[2]=PT_1[2]+m1*a1*l4/(2*l1)+m2*a1*l8/(2*l1);
	PT_1[3]=PT_1[3]+m1*a1*l4/(2*l1)+m2*a1*l8/(2*l1);
	PT_1[4]=PT_1[4]-m1*a1*l4/(2*l1)-m2*a1*l8/(2*l1);
	
	//左减速
	PR_2[1]=PR_0[1]+m1*a3*l6/(2*l1)+m2*a3*l5/(2*l1);
	PR_2[2]=PR_0[2]-m1*a3*l6/(2*l1)-m2*a3*l5/(2*l1);
	PR_2[3]=PR_0[3]-m1*a3*l6/(2*l1)-m2*a3*l5/(2*l1);
	PR_2[4]=PR_0[4]+m1*a3*l6/(2*l1)+m2*a3*l5/(2*l1);
	PT_2[1]=PT_1[1]+m1*a3*l4/(2*l1)+m2*a3*l8/(2*l1);
	PT_2[2]=PT_1[2]-m1*a3*l4/(2*l1)-m2*a3*l8/(2*l1);
	PT_2[3]=PT_1[3]-m1*a3*l4/(2*l1)-m2*a3*l8/(2*l1);
	PT_2[4]=PT_1[4]+m1*a3*l4/(2*l1)+m2*a3*l8/(2*l1);

	//右加速
	PR_3[1]=PR_0[1]+m1*a1*l6/(2*l1)+m2*a1*l5/(2*l1);
	PR_3[2]=PR_0[2]-m1*a1*l6/(2*l1)-m2*a1*l5/(2*l1);
	PR_3[3]=PR_0[3]-m1*a1*l6/(2*l1)-m2*a1*l5/(2*l1);
	PR_3[4]=PR_0[4]+m1*a1*l6/(2*l1)+m2*a1*l5/(2*l1);
	PT_3[1]=PT_1[1]+m1*a1*l4/(2*l1)+m2*a1*l8/(2*l1);
	PT_3[2]=PT_1[2]-m1*a1*l4/(2*l1)-m2*a1*l8/(2*l1);
	PT_3[3]=PT_1[3]-m1*a1*l4/(2*l1)-m2*a1*l8/(2*l1);
	PT_3[4]=PT_1[4]+m1*a1*l4/(2*l1)+m2*a1*l8/(2*l1);
	
	//右减速
	PR_4[1]=PR_0[1]-m1*a3*l6/(2*l1)-m2*a3*l5/(2*l1);
	PR_4[2]=PR_0[2]+m1*a3*l6/(2*l1)+m2*a3*l5/(2*l1);
	PR_4[3]=PR_0[3]+m1*a3*l6/(2*l1)+m2*a3*l5/(2*l1);
	PR_4[4]=PR_0[4]-m1*a3*l6/(2*l1)-m2*a3*l5/(2*l1);
	PT_4[1]=PT_1[1]-m1*a3*l4/(2*l1)-m2*a3*l8/(2*l1);
	PT_4[2]=PT_1[2]+m1*a3*l4/(2*l1)+m2*a3*l8/(2*l1);
	PT_4[3]=PT_1[3]+m1*a3*l4/(2*l1)+m2*a3*l8/(2*l1);
	PT_4[4]=PT_1[4]-m1*a3*l4/(2*l1)-m2*a3*l8/(2*l1);
}